#################
## DragonOps recommends creating environments (https://docs.github.com/en/actions/deployment/targeting-different-environments/using-environments-for-deployment).
## Environments allow users to configure `manual` jobs (this means that a deploy to production would need to be approved).
## See here for more information: https://docs.github.com/en/actions/using-workflows/triggering-a-workflow#using-environments-to-manually-trigger-workflow-jobs
#################

########
# This `dev` workflow will trigger on a push to all branches that are NOT master, main, prod, or production.
# The app will be deployed to the dev environment.
## Note: The BuildAndPush step will trigger the update to your application code. The DeployApp step will only update
### infrastructure changes, like IAM permissions, port and command.
########
name: DeployToDev

env:
  ENVIRONMENT_NAME: dev
  IS_PROD_ENVIRONMENT: false
  MASTER_ACCOUNT_REGION: us-east-1
  OIDC_ROLE_ARN: arn:aws:iam::721481723200:role/oidc-GitHub-dragonops-ci
  APP_NAME: python-flask-restapi4

on:
  workflow_dispatch:
  push:
    branches:
      - "**"
      - "!master"
      - "!main"
      - "!prod"
      - "!production"

jobs:
  EnvSetup:
    name: Setup Dynamic Environment Variables
    runs-on: ubuntu-latest
    outputs:
      env_name: ${{ steps.set-output-defaults.outputs.env_name }}
      is_prod_env: ${{ steps.set-output-defaults.outputs.is_prod_env }}
      master_account_region: ${{ steps.set-output-defaults.outputs.master_account_region }}
      oidc_role_arn: ${{ steps.set-output-defaults.outputs.oidc_role_arn }}
      app_name: ${{ steps.set-output-defaults.outputs.app_name }}
    steps:
      - name: set outputs for later jobs
        id: set-output-defaults
        run: |
          # If workflow_dispatch, use inputs (left), if other trigger, use default env (right)
          echo "master_account_region=$MASTER_ACCOUNT_REGION" >> $GITHUB_OUTPUT
          echo "env_name=$ENVIRONMENT_NAME" >> $GITHUB_OUTPUT
          echo "is_prod_env=$IS_PROD_ENVIRONMENT" >> $GITHUB_OUTPUT
          echo "oidc_role_arn=$OIDC_ROLE_ARN" >> $GITHUB_OUTPUT
          echo "app_name=$APP_NAME" >> $GITHUB_OUTPUT


  BuildAndPush:
    #    environment: $ENVIRONMENT_NAME
    uses: ./.github/workflows/build-and-push.yml
    with:
      MASTER_ACCOUNT_REGION: ${{needs.EnvSetup.outputs.master_account_region}}
      ENVIRONMENT_NAME: ${{needs.EnvSetup.outputs.env_name}}
      OIDC_ROLE_ARN: ${{needs.EnvSetup.outputs.oidc_role_arn}}
      APP_NAME: ${{needs.EnvSetup.outputs.app_name}}
      IS_PROD_ENVIRONMENT: ${{needs.EnvSetup.outputs.is_prod_env}}

  DeployApp:
#    environment: $ENVIRONMENT_NAME
    uses: ./.github/workflows/deploy-app.yml
    with:
      MASTER_ACCOUNT_REGION: ${{needs.EnvSetup.outputs.master_account_region}}
      ENVIRONMENT_NAME: ${{needs.EnvSetup.outputs.env_name}}
      OIDC_ROLE_ARN: ${{needs.EnvSetup.outputs.oidc_role_arn}}
      APP_NAME: ${{needs.EnvSetup.outputs.app_name}}
